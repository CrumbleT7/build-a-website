---
title: Makers Academy Build a Website
---

%h1
  %a#user-content-build-a-website-with-ruby-and-javascript.anchor{"aria-hidden" => "true", :href => "#build-a-website-with-ruby-and-javascript"}>
    %span.octicon.octicon-link
  Build a website with Ruby and JavaScript
%h2
  %a#user-content-why-am-i-doing-this.anchor{"aria-hidden" => "true", :href => "#why-am-i-doing-this"}>
    %span.octicon.octicon-link
  Why am I doing this?
%p You can already get a pretty long way building a website using just HTML &amp; CSS.  Or perhaps instead using the myriad blogging engines and 'build a website' services that exist.  So why bother with Ruby?
%p The truth is, being a web developer is not really about HTML and CSS.  Those are only a small part of the very broad range of skills and languages that a good developer needs to have.  Plus, only a proportion of web development actually happens on the web.  For the most part, developers work with code in 'development environments' on their local machines; very far from all the bells and whistles.
%p Being a web developer is about leveraging a whole range of technologies and languages, often at quite low levels and being confident to dive in and learn something new - and potentially complicated - even if it's initially bewildering.
%p And that's what this project is for: to give you a peek under the hood and hopefully - depending on your experience - challenge you to get a bit out of your depth.
%p So, let's begin.
%h2
  %a#user-content-how-to-follow-this-guide.anchor{"aria-hidden" => "true", :href => "#how-to-follow-this-guide"}>
    %span.octicon.octicon-link
  How to follow this guide
%p
  There are no intentional tricks or traps in this guide.  If you follow the instructions correctly, you should finish with a fully-working website that can be deployed to the world.  If you get stuck, read
  = succeed "." do
    %a{:href => "#what-to-do-if-you-get-stuck"} what to do if you get stuck
%ul
  %li
    %strong> Type every line of code yourself
    \.  While it's tempting to copy and paste code from this guide, you won't learn anything if you do.
  %li
    %strong> You don't need to understand everything
    \.  Of course, 'understanding' is a vital part of being a developer; but so is managing how much you need to know.  It isn't possible to understand everything.
%p
  %a{:href => "/steps/0.md"} Begin with Step 0
%h2
  %a#user-content-what-to-do-if-you-get-stuck.anchor{"aria-hidden" => "true", :href => "#what-to-do-if-you-get-stuck"}>
    %span.octicon.octicon-link
  What to do if you get stuck
%p Getting stuck sucks.  Especially when you're just getting started and things don't work!
%p But don't worry - getting stuck is an inevitable part of being a developer and getting unstuck is a critical skill.  If you are not getting the results you expect, try the following steps:
%ol
  %li
    %p Try to gather some words about the problem, even in vague terms. "It's broken" is not a problem description.
  %li
    %p Pair Partner. Bounce off them, discuss, and rubber-duck debug. Imagine you are seeing the problem for the first time, together.
  %li
    %p Isolate Keywords. Gather a small group of keywords that describe the problem area, like Array, ‘Websockets’, or ‘Terminal’.
  %li
    %p Isolate Error Keywords. If you have an error message, identify and add these keywords to your results from 3).
  %li
    %p Google. Research the problem using your keywords. Also use the keywords to identify relevant results (i.e. not just the first one).
  %li
    %p Stack Overflow. Format your question well. Expect formatting feedback on your query from coaches, and support from Alumni Helpers or fellow students/graduates. If you're struggling to create a post, grab an Alumni Helper to help out.
  %li
    %p Alumni Helper. Take your well-formatted Slack/Stack Overflow problem to an Alumni Helper for one-to-one guidance.
  %li
    %p Coach. If all else fails, get some 1-1 support. Don't be disappointed if the answer comes as more questions.
